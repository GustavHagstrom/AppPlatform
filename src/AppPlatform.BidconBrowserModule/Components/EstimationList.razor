@using Microsoft.AspNetCore.Components.Web.Virtualization

<div style="@($"height: {Height}")">
    <div>
        <div class="d-flex">
            <input placeholder="Sökfilter" class="pa-2 flex-grow-1" style="outline: none; background-color: var(--mud-palette-background); color: var(--mud-palette-text-primary)" @bind="Filter" @bind:event="oninput" />
        </div>
        <MudDivider Light="true"/>
    </div>
    <div style="@($"overflow-y: scroll; position: relative; height: calc(100% - 37px)")">
    
    
        @if (ItemTree is not null)
        {
            <table class="striped" style="width: 100%;">
                <tbody>
                    <Virtualize Items="ItemTree.SearchEstimations(Filter)!.OrderBy(x => x.Name).ToHashSet()">
                        <tr class="d-flex">
                            <td class="d-flex flex-grow-1">
                                <MudCheckBox T="bool" @bind-Value="context.IsSelected"/>
                                <MudIcon Icon="@Icons.Material.Sharp.Article"  Style="color: var(--mud-palette-warning-lighten)" Class="align-self-center ml-0" />
                                <MudText Class="align-self-center ml-2">@context.Name</MudText>
                            </td>
                        </tr>
                    </Virtualize>
                </tbody>
            </table>
        }
    </div>
    
</div>

@code{
    [Parameter, EditorRequired] public TreeItem? ItemTree { get; set; }
    [Parameter] public string Height { get; set; } = string.Empty;
    [Inject] public required IStringLocalizer<EstimationList> Localizer { get; set; }
    private string Filter { get; set; } = string.Empty;

}