<div>
    <div class="d-flex" style="@JustifyContent">
        <div style="display: flex; align-items: flex-end;">
            <MudText Typo="Typo.subtitle1" Style="font-weight: bold; margin-bottom: -4px;">@Title</MudText>
        </div>
        <div style="padding-bottom: 4px;">
            @HeaderContent
        </div>
    </div>
    <MudField Class="@MudFieldClass" Style="@MudFieldStyle" Variant="Variant.Outlined" Margin="Margin.Dense">
        <div style="@_minChildHeight">
            @ChildContent
        </div>
    </MudField>
</div>


@code{
    [Parameter] public RenderFragment? HeaderContent { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public HeaderAlignment Alignment { get; set; }
    [Parameter] public string? MudFieldClass { get; set; } = "custom-input-1";
    [Parameter] public string? MudFieldStyle { get; set; }
    [Parameter] public string MinChildHeight { get; set; } = "92px";

        string _minChildHeight => $"min-height: {MinChildHeight}";

    string JustifyContent => Alignment switch
    {
        HeaderAlignment.Left => "justify-content: flex-start",
        _ => "justify-content: space-between;"
    };

    public enum HeaderAlignment
    {
        Left,
        Right
    }
}