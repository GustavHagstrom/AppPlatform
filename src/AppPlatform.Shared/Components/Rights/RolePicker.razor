@using AppPlatform.Core.Enteties.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IStringLocalizer<RolePicker> Localizer

<MudSimpleTable Dense="true" Bordered="false">
    <tbody>
        @foreach (var role in AllRoles)
        {
            <tr>
                <td class="pl-2">
                    <MudCheckBox T="bool"
                                 Dense="true"
                                 Value="@PickedRoleIds.Any(x => x == role.Id)"
                                 ValueChanged="x => OnPickChanged(role, x)" />
                </td>
                <td>
                    @role.Name
                </td>
                <td style="width: 100%;">
                    @role.Description
                </td>
            </tr>

        }
    </tbody>
</MudSimpleTable>

@code {
    [Parameter] public List<string> PickedRoleIds { get; set; } = new List<string>();
    /// <summary>
    /// Update the picked roles upon this callback
    /// </summary>
    [Parameter] public EventCallback<PickChangedRecord<Role>> PickChanged { get; set; }
    [Parameter] public List<Role> AllRoles { get; set; } = new List<Role>();

    async Task OnPickChanged(Role role, bool value)
    {
        await PickChanged.InvokeAsync(new PickChangedRecord<Role>(role, value));
        StateHasChanged();
    }
}