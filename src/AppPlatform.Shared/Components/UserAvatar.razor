@using AppPlatform.Core.Models.FromShared
<style>
    .avatar-style {
        box-shadow: 0px 3px 5px -1px rgba(0,0,0,.2), 0px 6px 10px 0px rgba(0,0,0,.14), 0px 1px 18px 0px rgba(0,0,0,.12);
        background-color: var(--mud-palette-action-default-hover);
    }
</style>

<div class="d-flex" style="align-items: center; ">
    
    @if (User is not null)
    {
        @if (ShowText  && TextPosition == UserAvatarTextPosition.Left)
        {
            <MudText Class="pr-2" Typo="Typo.subtitle2">@User.User.DisplayName</MudText>
        }
        <MudAvatar Size="Size" Class="avatar-style">
            @if (User.PhotoBase64 != null)
            {
                <MudImage Src="@($"data:image/png;base64, {User.PhotoBase64}")" Alt="User photo" />
            }
            else
            {
                <div class="pa-0">
                    @User.User.DisplayName?.First()
                </div>
            }
        </MudAvatar>
        @if (ShowText && TextPosition == UserAvatarTextPosition.Right)
        {
            <MudText Class="pl-2" Typo="Typo.subtitle2">@User.User.DisplayName</MudText>
        }
    }
    else
    {
        <MudSkeleton SkeletonType="SkeletonType.Circle" Width="40px" Height="40px" />
    }
    
</div>

@code{
    [Parameter] public UserWithPhoto? User { get; set; }
    [Parameter] public UserAvatarTextPosition TextPosition { get; set; } = UserAvatarTextPosition.Right;
    [Parameter] public Size Size { get; set; } = Size.Medium;
    [Parameter] public bool ShowText { get; set; } = true;

    public enum UserAvatarTextPosition
    {
        Left,
        Right
    }

}