@using AppPlatform.Shared.Components.View.DataSectionStuff
@using AppPlatform.Shared.Components.View.TableStuff
@using System.Globalization
@using AppPlatform.Shared.Services.Views
@inject IStringLocalizer<DataSectionPresenter> Localizer
@inject IViewStyleService ViewStyleService

@if(Section is not null)
{
    
    var totalWidth = Section.Columns.Sum(x => x.Width);
    var widthMap = new Dictionary<DataColumn, string>();
    var columns = Section.Columns.OrderBy(x => x.Order).ToList();

    foreach (var column in columns)
    {
        var widthValue = ((double)column.Width / totalWidth * 100).ToString(CultureInfo.InvariantCulture);
        var widthText = widthValue + "%";
        widthMap.Add(column, widthText);
    }
    
    <ViewTable>

     @*    <ColumnDefinitionsContent>
            @{
                var totalWidth = Section.Columns.Sum(x => x.Width);
                foreach (var column in Section.Columns.OrderBy(x => x.Order))
                {
                    var widthValue = ((double)column.Width / totalWidth * 100).ToString(CultureInfo.InvariantCulture);
                    var widthText = widthValue + "%";
                    <ColumnDefinition Width="@widthText" />
                }
            }
        </ColumnDefinitionsContent> *@
        <BodyContent>
            
            @foreach (var row in Section.Rows.OrderBy(x => x.Order))
            {
                <ViewRow Height="@row.Height">
                    @foreach (var column in columns)
                    {
                        var cell = Section.Cells.FirstOrDefault(x => x.Row == row.Order && x.Column == column.Order);
                        if (cell is not null)
                        {
                            var style = ViewStyleService.CreateFormatStyles(cell.CellFormat!);
                            <ViewCell Width="@widthMap[column]" CellValueStyle="@style" Type="ViewCell.CellType.TableCell" CellValue="@cell.Formula" />
                        }

                    }
                </ViewRow>
            }
        </BodyContent>
    </ViewTable>
}

@code {
    [Parameter] public DataSection? Section { get; set; }
    [Parameter] public bool EditMode { get; set; } = false;
    [Parameter] public Estimation? Estimation { get; set; }
}