@* @using AppPlatform.Core.Enums.ViewTemplate
@if (Section is not null && Item is not null)
{
    int columnCount = 0;
    foreach (var column in Section.Columns.OrderBy(x => x.Order))
    {
        columnCount += 1;
        var indentWidth = columnCount == 1 ? $"width: {Item.Level * 8}px;" : string.Empty;

        <td @onclick="async () => await Select(Item, column.ColumnType)" class="@ColumnClassMap[column.ColumnType]">
            <span style="@indentWidth" />
            <SheetItemCell Item="Item" SelectedCell="SelectedCell" CellSelectionRequest="CellSelectionRequest" ColumnType="column.ColumnType"/>
        </td>
    }
}



@code{
    [Parameter] public Dictionary<SheetColumnType, string> ColumnClassMap { get; set; } = new();
    [Parameter, EditorRequired] public SheetSection? Section { get; set; }
    [Parameter, EditorRequired] public SheetItem? Item { get; set; }
    [Parameter, EditorRequired] public SheetCellSelection? SelectedCell { get; set; }
    [Parameter, EditorRequired] public EventCallback<SheetCellSelection> CellSelectionRequest { get; set; }

    Task Select(SheetItem item, SheetColumnType type)
    {
        var cellSelection = new SheetCellSelection(item, type);
        return CellSelectionRequest.InvokeAsync(cellSelection);
    }

  
} *@