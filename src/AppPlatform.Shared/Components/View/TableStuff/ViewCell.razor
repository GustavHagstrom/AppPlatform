@* <MudElement HtmlTag="@_type"> *@
    <div class="cell-container" style="@_containerWidthStyle">
        @if (ShowExpandButton)
        {
            <ViewExpandButton IndentLevel="@IndentLevel" Toggled="@Toggled" ToggledChanged="@ToggledChanged" />
        }
        <div class="cell-value" style="@_style">
            @if (IsVisible)
            {
                @CellValue
            }
        </div>
    </div>
@* </MudElement> *@
    

@code{
    [Parameter] public string CellValueStyle { get; set; } = "";
    [Parameter] public string CellValue { get; set; } = "";
    [Parameter] public bool IsVisible { get; set; } = true;
    [Parameter] public CellType Type { get; set; } = CellType.TableCell;
    [Parameter, EditorRequired] public string Width { get; set; } = string.Empty;


    [Parameter] public bool IsIndented { get; set; } = false;
    [Parameter] public bool ShowExpandButton { get; set; } = false;

    [Parameter] public int IndentLevel { get; set; }
    [Parameter] public bool Toggled { get; set; }
    [Parameter] public EventCallback<bool> ToggledChanged { get; set; }

    string _style => IsIndented || ShowExpandButton ? $"padding-left: {IndentLevel * 16 + 24}px; {CellValueStyle}" : CellValueStyle;
    string _containerWidthStyle => $"width: {Width}";

    string _type => Type switch
    {
        CellType.HeaderCell => "th",
        _ => "td"
    };

    public enum CellType
    {
        HeaderCell,
        TableCell
    }
}