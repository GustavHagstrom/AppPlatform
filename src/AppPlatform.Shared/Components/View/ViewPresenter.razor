@using AppPlatform.Shared.Components.View.DataSectionStuff
@using AppPlatform.Shared.Components.View.SheetSectionFolder

<CascadingValue Value="this">

    <div style="height: 100%; width: 100%;">

        <style>
            .ViewPresenter > * {
            @($"font-family: {View?.FontFamily};")
            }
        </style>

        <MudPaper Class="ViewPresenter pa-4" Square="true" Width="900px;" Height="100%" Elevation="5">

            @if(View is not null)
            {
                foreach (var section in View.SectionsInOrder())
                {
                    if (section is SheetSection sheetSection)
                    {
                        <SheetSectionPresenter Section="sheetSection" Estimation="Estimation" View="View" DoItemsStartAsExpanded="DoTableItemsStartAsExpanded" />
                    }
                    else if (section is DataSection dataSection)
                    {
                        <DataSectionPresenter Section="dataSection" Estimation="Estimation" />
                    }
                    else if (section is PageBreakSection pageBreakSection)
                    {
                        <PageBreakPresenter />
                    }
                    else
                    {
                        throw new NotImplementedException();
                    }
                }
            }
            


        </MudPaper>

    </div>

</CascadingValue>

@code{
    [Parameter] public View? View { get; set; }
    [Parameter] public Estimation? Estimation { get; set; }
    [Parameter] public bool DoTableItemsStartAsExpanded { get; set; } = false;

    public ISection? SelectedSection { get; private set; } = null;
    public object? SelectedItem { get; private set; } = null;

    public void SetSelectedSection(ISection? section)
    {
        SelectedSection = section;
        StateHasChanged();
    }
    public void SetSelectedSectionItem(object item)
    {
        SelectedItem = item;
        StateHasChanged();
    }

    public void NotifyStateChanged() => StateHasChanged();
}