<div style="height: 100%">
    <MudToolBar Dense="true" Gutters="false" Class="border-b border-solid">
        <MudSelect T="View" Dense="true" Margin="Margin.Dense">
            @foreach (var view in Views)
            {
                <MudSelectItem Value="view" />
            }
        </MudSelect>
    </MudToolBar>
    <div style="height: calc(100% - 48px)">
        <ViewPreviewer Estimation="Estimation" />
    </div>
</div>


@inject IViewAccessStore ViewAccessStore
@inject IStringLocalizer<ViewPreviewer> Localizer
@inject AuthenticationStateProvider AuthenticationStateProvider
@code{
    [Parameter] public Estimation? Estimation { get; set; }


    List<View> Views = new();
    View? SelectedView;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userId = state.User.GetUserId();
        if (userId is null) return;
        var views = await ViewAccessStore.GetAvailableViewsAsync(userId);
        Views = views.ToList();
        SelectedView = Views.FirstOrDefault();
    }
    string GetViewName(View view)
    {
        if (view is null) return Localizer["ERROR"];
        return view.Name ?? Localizer["ERROR"];
    }
}