<MudDialog>
    <DialogContent>
        <div class="d-flex gap-2 nomarginpls" style="flex-direction: column;">
            <MudTextField T="string" Margin="Margin.Dense" @bind-Value="Name" Label="@Localizer["Namn"]" Variant="Variant.Outlined"/>
            <MudSelect T="SectionType" Margin="Margin.Dense" @bind-Value="Type" Label="@Localizer["Typ"]" ToStringFunc="x => Helper.GetSectionTypeName(x)" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" Variant="Variant.Outlined">
                @foreach (var type in Enum.GetValues<SectionType>())
                {
                    <MudSelectItem T="SectionType" Value="type" />
                }
            </MudSelect>
        </div>
    </DialogContent>
    <DialogActions>
        <div Class="pr-4 pb-2">
            <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Inherit">@Localizer["Avbryt"]</MudButton>
            <MudButton OnClick="Ok" Variant="Variant.Filled" Color="YesButtonColor">@Localizer["Ok"]</MudButton>
        </div>
    </DialogActions>
</MudDialog>

@inject IStringLocalizer<NewSectionDialog> Localizer
@inject Helper Helper
@code {
    [CascadingParameter] public required MudDialogInstance MudDialog { get; set; }
    string Name { get; set; } = string.Empty;
    SectionType Type = SectionType.DataSection;


    [Parameter] public Color YesButtonColor { get; set; } = Color.Primary;

    void Ok() => MudDialog.Close(DialogResult.Ok(new NewSectionDialogResult(Name, Type)));
    void Cancel() => MudDialog.Cancel();
}