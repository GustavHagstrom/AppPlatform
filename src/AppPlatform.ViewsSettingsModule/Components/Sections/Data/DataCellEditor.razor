@using AppPlatform.ViewSettingsModule.Components.Format

@inject IStringLocalizer<DataCellEditor> Localizer

@if (DataCellFormat is not null)
{
    <div>
        <FieldHeader Title="@Localizer["Format"]" />
        <FormatEditor Format="DataCellFormat" />
    </div>        
    <div class="d-flex gap-2">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Style="width: 50%;" OnClick="ApplyToEntireColumn">@Localizer["Applicera format på hela kolumnen"]</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Style="width: 50%;" OnClick="ApplyToEntireRow">@Localizer["Applicera format på hela raden"]</MudButton>
    </div>
}




@code{
    [Parameter] public DataSection? Section { get; set; }
    [CascadingParameter] public EditViewPage? EditViewPage { get; set; }



    [Parameter] public DataCellFormat? DataCellFormat { get; set; }


    void ApplyToEntireRow()
    {
        if (DataCellFormat is not null && Section is not null)
        {
            foreach (var cell in Section.Cells.Where(x => x.Row == DataCellFormat.DataCell!.Row))
            {
                cell.CellFormat?.ApplyFormat(DataCellFormat);
            }
            EditViewPage?.TriggerStateHasChanged();
        }
    }
    void ApplyToEntireColumn()
    {
        if (DataCellFormat is not null && Section is not null)
        {
            foreach (var cell in Section.Cells.Where(x => x.Column == DataCellFormat.DataCell!.Column))
            {
                cell.CellFormat?.ApplyFormat(DataCellFormat);
            }
            EditViewPage?.TriggerStateHasChanged();
        }
    }
}