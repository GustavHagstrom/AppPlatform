@using AppPlatform.ViewSettingsModule.Components.Format

@inject IStringLocalizer<SheetCellEditor> Localizer

@if (SheetCellFormat is not null)
{
    <div>
        <FieldHeader Title="@Localizer["Format"]"/>
        <FormatEditor Format="SheetCellFormat" />
    </div>
    <div class="d-flex gap-2">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Style="width: 50%;" OnClick="ApplyToEntireColumn">@Localizer["Applicera format på hela kolumnen"]</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Style="width: 50%;" OnClick="ApplyToEntireRow">@Localizer["Applicera format på hela raden"]</MudButton>
    </div>
    
}




@code{
    [Parameter] public SheetSection? Section { get; set; }
    [CascadingParameter] public EditViewPage? EditViewPage { get; set; }
    [Parameter] public SheetCellFormat? SheetCellFormat { get; set; }


    void ApplyToEntireRow()
    {
        if (SheetCellFormat is not null)
        {
            foreach (var cellFormat in Section!.CellFormats.Where(x => x.RowType == SheetCellFormat.RowType))
            {
                cellFormat.ApplyFormat(SheetCellFormat);
                EditViewPage?.TriggerStateHasChanged();
            }
        }
    }
    void ApplyToEntireColumn()
    {
        if (SheetCellFormat is not null)
        {
            foreach (var cellFormat in Section!.CellFormats.Where(x => x.ColumnType == SheetCellFormat.ColumnType))
            {
                cellFormat.ApplyFormat(SheetCellFormat);
                EditViewPage?.TriggerStateHasChanged();
            }
        }
    }
}