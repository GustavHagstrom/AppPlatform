@using PublicWorkerWasmClient.Authentication.Helpers
@inject NavigationManager _navigationManager
            
<AuthorizeView>
    <Authorized>
<MudButton Class="py-0" Style="@($"height:{Theme!.LayoutProperties.AppbarHeight}")" Variant="Variant.Text" OnClick="ToggleOpen">
    <MudStack Row="true" Spacing="1">
        <MudText Class="align-self-end" Typo="Typo.subtitle2" Style="@($"color:{Theme!.Palette.AppbarText};")">
            @($"{ClaimsExtractor.GetFirstName(context.User)} {ClaimsExtractor.GetLastName(context.User)}")
        </MudText>
        <MudIcon Class="align-self-end" Icon="@Icons.Material.Sharp.Person" Color="Color.Success"/>
    </MudStack>
</MudButton>
    </Authorized>
    <NotAuthorized>
        <MudIconButton Icon="@Icons.Material.Sharp.Person" 
            Style="@($"color:{Theme!.Palette.AppbarText};height:{Theme!.LayoutProperties.AppbarHeight};width:{Theme!.LayoutProperties.AppbarHeight}")" 
            OnClick="ToggleOpen" />
    </NotAuthorized>
</AuthorizeView>

<MudPopover Class="pa-3" Open="IsOpen" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
    <AuthorizeView>
        <Authorized>
            <LogoutView User="context.User" OnLogout="OnLoginEvent" />
        </Authorized>
        <NotAuthorized>
            <LoginView OnLogin="OnLoginEvent" />
        </NotAuthorized>
    </AuthorizeView>
</MudPopover>


@code {
    [CascadingParameter] private MudTheme? Theme { get; set; }

    public bool IsOpen { get; set; } = false;

    public void ToggleOpen() => IsOpen = !IsOpen;

    public void OnLoginEvent()
    {
        IsOpen = false;
        StateHasChanged();
    }


}
