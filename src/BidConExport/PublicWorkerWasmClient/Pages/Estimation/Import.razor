@page "/estimation/import"
@using PublicWorkerWasmClient.Authentication.Services
@inject IBidconApiHandler _bidconApiHandler
@inject IEstimationImportState _importState
@inject ITokenManagerService _tokenManagerService
@inject IEstimationImportSettingsState _importSettingsState

<MudToolBar Style="@($"height: 40px; background-color: {Theame!.Palette.GrayLighter}; width: 100%;")" DisableGutters="true" Class="d-flex justify-center">
    <MudIconButton Icon="@Icons.Material.Sharp.Download" OnClick="DownloadAsync" />
    <MudIconButton Icon="@Icons.Material.Sharp.Refresh" OnClick="RefreshEstimationListAsync"/>
    <MudIconButton Icon="@Icons.Material.Sharp.Settings" OnClick="EditSettings"/>
</MudToolBar>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudPaper Square="true" Elevation="4">
        <AuthorizeView>
            <Authorized>
                <MudTabs Centered="true" KeepPanelsAlive="true">
                    <MudTabPanel Text="Utforska" Icon="@Icons.Material.Sharp.Folder">
                        <MudDivider Light="true" />
                        <EstimationExplorer ImportState="_importState" Height="calc(100vh - 129px)" />
                    </MudTabPanel>

                    <MudTabPanel Text="Lista" Icon="@Icons.Material.Sharp.Search">
                        <MudDivider Light="true" />
                        <EstimationSelectionList ImportState="_importState" Height="calc(100vh - 129px)" />
                    </MudTabPanel>

                    <MudTabPanel Text="Valda" Icon="@Icons.Material.Sharp.CheckBox">
                        <MudDivider Light="true" />
                        <EstimationSelectedList ImportState="_importState" Height="calc(100vh - 129px)" />
                    </MudTabPanel>

                </MudTabs>
            </Authorized>
            <Authorizing>
                Authorizing...
            </Authorizing>
            <NotAuthorized>
                Not authorized
            </NotAuthorized>
        </AuthorizeView>
    </MudPaper>
</MudContainer>
    



@code{
    [CascadingParameter] public MudTheme? Theame { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await _importState.RefreshItemsAsync();
    }
    private async Task DownloadAsync()
    {
        var token = await _tokenManagerService.GetTokenModelFromLocalStorageAsync();
        if (token == TokenModel.Empty) return;

        var estimations = new List<SimpleEstimation>();
        foreach (var e in _importState.SelectedEstimations()!)
        {
            var estimation = await _bidconApiHandler.GetEstimationAsync(token, e.Id, _importSettingsState.CurrentSettings!);
            estimations.Add(estimation);
        }
    }
    private async Task RefreshEstimationListAsync()
    {
        await _importState.RefreshItemsAsync();
    }
    private void EditSettings()
    {

    }
}