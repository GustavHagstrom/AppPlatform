@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@inject GraphServiceClient GraphClient
@inject OnLoginScopedData _loginData


<AuthorizeView>
    <Authorized>
        <MudAvatar Class="mr-1 align-self-center mud-ripple cursor-pointer" Style="@($"height:40px; width:40px; background-color: {Theme.Palette.PrimaryLighten}")" @onclick="ToggleOpen">
                @if (!string.IsNullOrEmpty(_loginData.ProfilePhotoString))
                {
                    <img src="@_loginData.ProfilePhotoString" style="height:40px; width:40px;" class="align-self-center" />
                }
                else
                {
                    <MudText Typo="Typo.h6" Class="align-self-center" Style="font-size: 1rem">@GetInitials(context.User.Identity?.Name)</MudText>
                }
                
            </MudAvatar>
    <MudPopover Open="_isOpen" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
        <MudButton OnClick="BeginLogOut" Variant="Variant.Text">Log out</MudButton>
    </MudPopover>
    </Authorized>
    <NotAuthorized>
        <MudButton Variant="Variant.Text" Href="authentication/login">Log in</MudButton>
    </NotAuthorized>
</AuthorizeView>



@code{
    [CascadingParameter] public required MudTheme Theme { get; set; }
    public bool _isOpen = false;

    protected override void OnInitialized()
    {
        _loginData.StateChanged += StateHasChanged;
    }
    protected override async Task OnInitializedAsync()
    {
        await _loginData.SetPhotoStringAsync();
    }
    public void ToggleOpen()
    {
        if (_isOpen)
            _isOpen = false;
        else
            _isOpen = true;
    }
    public string GetInitials(string? name)
    {
        if (name is null) return string.Empty;
        var names = name.Split(" ");
        var initials = string.Empty;
        foreach (var item in names)
        {
            initials += item.First();
        }
        return initials;
    }
    public void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }
}
