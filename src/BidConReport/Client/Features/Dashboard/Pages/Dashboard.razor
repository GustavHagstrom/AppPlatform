@page "/dashboard"
@*@attribute [Authorize]*@

<PageLayout >
    <MudGrid Class="pt-4 px-4">
        <MudItem>
            <MudPaper Elevation="2">
                <CurrentSession />
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                <h6>@ImageString</h6>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudGrid>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="min-height: 200px;">
                        <MudButton OnClick="Click">Test</MudButton>
                        <MudText Typo="Typo.h6">@Result</MudText>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
    </MudGrid>
    
</PageLayout>



@code {
    [Inject] public required HttpClient HttpClient { get; set; }
    public required string Result { get; set; } = "";
    public required string ImageString { get; set; } = "";

    public async Task Click()
    {
        var result = await HttpClient.GetAsync("/api/authorization/roles");
        Result = await result.Content.ReadAsStringAsync();
        StateHasChanged();
    }

}

