<div style="@($"height: {Height}")">
    <div>
        <div class="d-flex">
            <input placeholder="Sökfilter" class="ma-1 pa-1 flex-grow-1" style="outline: none" @bind="Filter" @bind:event="oninput"/>
        </div>
        <MudDivider Light="true"/>
    </div>
    <div style="@($"overflow-y: scroll; position: relative; height: calc({Height} - 37px)")">
        <MudOverlay Visible="IsRefreshing" DarkBackground="true" Absolute="true">
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
        </MudOverlay>   
    
    
        @if (IsRefreshing == false && ItemTree is not null)
        {
            <table class="striped">
                <tbody>
                    <Virtualize Items="ItemTree!.Search(Filter)!.OrderBy(x => x.Name).ToHashSet()">
                        <tr class="d-flex">
                            <td class="d-flex flex-grow-1">
                                <MudCheckBox @bind-Checked="context.IsSelected" />
                                <MudIcon Icon="@Icons.Material.Sharp.Article" Color="@Color.Tertiary" Class="align-self-center ml-3" />
                                <MudText Class="align-self-center ml-2">@context.Name</MudText>
                            </td>
                        </tr>
                    </Virtualize>
                </tbody>
            </table>
        }
    </div>
    
</div>

@code{
    [Parameter, EditorRequired] public DbTreeItem? ItemTree { get; set; }
    [Parameter, EditorRequired] public bool IsRefreshing { get; set; }
    [Parameter] public string Height { get; set; } = string.Empty;
    private string Filter { get; set; } = string.Empty;
}