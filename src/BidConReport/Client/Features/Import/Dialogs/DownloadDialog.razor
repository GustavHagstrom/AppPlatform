@implements IDisposable
<MudDialog>
    <DialogContent>

        <MudPaper Class="my-4" Style="height: 300px; overflow-y: scroll">
            <table class="striped">
                <tbody>
                    <Virtualize Items="Estimations">
                        <tr class="d-flex">
                            <td class="d-flex flex-grow-1 pa-2">
                                <MudIcon Icon="@Icons.Material.Sharp.Article" Color="@Color.Tertiary" Class="align-self-center" />
                                <MudText Class="align-self-center ml-2">@context.ToString()</MudText>
                            </td>
                        </tr>
                    </Virtualize>
                </tbody>
            </table>
        </MudPaper>

        @if (Errors.Any())
        {
            <MudPaper Class="mb-4 border-2 border-solid mud-border-error" Style="height: 100px; overflow-y: scroll">
                <table class="striped">
                    <tbody>
                        <Virtualize Items="Errors">
                            <tr class="d-flex">
                                <td class="d-flex flex-grow-1">
                                    <MudText Class="align-self-center">@context</MudText>
                                </td>
                            </tr>
                        </Virtualize>
                    </tbody>
                </table>
            </MudPaper>
        }
        
        
        <MudProgressLinear Value="CurrentCount * 100 / TotalEstimationCount" Size="Size.Large" Color="Color.Success">
            <MudText>@($"{CurrentCount}/{TotalEstimationCount}")</MudText>
        </MudProgressLinear>

    </DialogContent>
    <DialogActions>
        <div Class="pr-4 pb-2">
            <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Error">@Localizer["Avbryt"]</MudButton>
            <MudButton Disabled="CurrentCount != TotalEstimationCount" Variant="Variant.Filled" Color="Color.Success" OnClick="Submit">@Localizer["Ok"]</MudButton>
        </div>           
    </DialogActions>
</MudDialog>

    @code {
    [CascadingParameter] public required MudDialogInstance MudDialog { get; set; }
    [Parameter] public required Progress<BidConImportResultDTO<EstimationDTO>> Progress { get; set; }
    [Parameter] public required int TotalEstimationCount { get; set; }
    [Parameter] public required CancellationTokenSource CancelTokenSource { get; set; }
    [Inject] public required IStringLocalizer<DownloadDialog> Localizer { get; set; }
    [Inject] public required NavigationManager Navigation { get; set; }

    int CurrentCount { get; set; } = 0;
    HashSet<EstimationDTO> Estimations { get; set; } = new();
    List<string> Errors { get; set; } = new();
    bool IsDownloading { get; set; } = true;

    protected override void OnInitialized()
    {
        Progress.ProgressChanged += OnProgressReport;
    }
    void OnProgressReport(object? source, BidConImportResultDTO<EstimationDTO>? result)
    {
        if (result is null) return;
        if(result.Value is not null)
        {
            Estimations.Add(result.Value);
        }
        else if(result.ErrorMessage is not null)
        {
            Errors.Add(result.ErrorMessage);
        }
        CurrentCount += 1;
        IsDownloading = CurrentCount != TotalEstimationCount;
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        Progress.ProgressChanged -= OnProgressReport;
    }
    void Submit()
    {
        Navigation.NavigateTo(ClientRoutes.Report);
    }
    void Cancel()
    {
        CancelTokenSource.Cancel();
        MudDialog.Cancel();
    }

}
