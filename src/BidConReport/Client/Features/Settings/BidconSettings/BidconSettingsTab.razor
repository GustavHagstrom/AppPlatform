@implements IDisposable
@using BidConReport.Client.Features.Settings.BidconSettings.BicdonCredentials
@using BidConReport.Client.Features.Settings.BidconSettings.Import
@using BidConReport.Client.Features.Settings.BidconSettings.Report
@using MudBlazor.Services;

<PageTab HeaderStartIcon="@CustomIcons.BidconIcon" HeaderText="@Localizer["Bidcon"]" HeaderTooltip="@Localizer["Bidcon"]" Class="pa-4">

    <MudContainer MaxWidth="MaxWidth.Medium" Style="height: 100%">
        <MudStack Style="height: 100%" Row="ScreenSizeService.CurrentScreenWidth > 500" Justify="Justify.Center" Spacing="5">
            <ImportSettignsList />
            <ReportTemplatesList />
            <CredentialsView />
        </MudStack>
    </MudContainer>
      
</PageTab>


@code {
    [Inject] public required IStringLocalizer<BidconSettingsTab> Localizer { get; set; }
    [Inject] public required ScreenSizeService ScreenSizeService  { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await ScreenSizeService.Subscribe(OnScreenWidthChanged);
    }

    public void Dispose()
    {
        ScreenSizeService.UnSubscribe(OnScreenWidthChanged);
    }

    private void OnScreenWidthChanged()
    {
        if (ScreenSizeService.LastScreenWidth >= 500 && ScreenSizeService.CurrentScreenWidth < 500 ||
        ScreenSizeService.LastScreenWidth <= 500 && ScreenSizeService.CurrentScreenWidth > 500)
        {
            StateHasChanged();
        }
    }
}
