<PageTab HeaderStartIcon="@Icons.Material.Sharp.Person" HeaderText="@Localizer["Allmänt"]" HeaderTooltip="@Localizer["Allmänt"]" Class="pa-4">
    <MudContainer MaxWidth="MaxWidth.Large" Style="height: 100%">
        <MudPaper Style="height: 100%" Class="pa-4">
            <MudGrid Justify="Justify.FlexStart" Spacing="2">
                <MudItem xs="12">
                    <MudSwitch Disabled="IsLoading" Checked="IsDarkMode" CheckedChanged="@(async (bool value) => await OnDarkModeChanged(value))" Color="Color.Primary" Label="@Localizer["Mörkts tema"]" />
                </MudItem>
                <MudItem xs="12">
                    <DefaultImortSettingsSelector />
                </MudItem>
                <MudItem xs="12">
                    <DefaultReportTemplateSelector />
                </MudItem>
                <MudItem xs="12">
                    <OrganizationControl />
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudContainer>
</PageTab>

@code {
    [Inject] public required IStringLocalizer<CommonSettingsTab> Localizer { get; set; }
    [Inject] public required IDarkModeService DarkModeService { get; set; }
    [CascadingParameter(Name = "DarkModeAction")] public required Action<bool> DarkModeAction { get; set; }

    bool IsLoading { get; set; } = true;
    bool IsDarkMode { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        IsDarkMode = await DarkModeService.GetUserDarkModeSettingAsync();
        IsLoading = false;
    }
    public async Task OnDarkModeChanged(bool isDarkMode)
    {
        IsDarkMode = isDarkMode;
        DarkModeAction.Invoke(isDarkMode);
        await DarkModeService.SetUserDarkModeSettingAsync(isDarkMode);
    }
}
