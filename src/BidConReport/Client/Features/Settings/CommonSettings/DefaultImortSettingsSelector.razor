@inherits IsLoadingComponent

<MudText Typo="Typo.subtitle1">@Localizer["Förhandsval av importprofil"]</MudText>
<MudSelect T="EstimationImportSettingsDto" Dense="true" Variant="Variant.Outlined" Value="DefaultProfile" ValueChanged="OnProfileChanged" Margin="Margin.Dense" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
    @foreach (var item in Profiles)
    {
        <MudSelectItem Value="item" />
    }
</MudSelect>
@*<Frame Border="false" UnderlinedTitle="false">
    <TitleContent>
        <MudText Typo="Typo.subtitle1">@Localizer["Förhandsval av importprofil"]</MudText>
    </TitleContent>
    <ChildContent>
        <MudSelect T="EstimationImportSettings" Dense="true" Variant="Variant.Outlined" Value="DefaultProfile" ValueChanged="OnProfileChanged" Margin="Margin.Dense" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
            @foreach (var item in Profiles)
            {
                <MudSelectItem Value="item" />
            }
        </MudSelect>
    </ChildContent>
</Frame>*@
@*<MudSelect T="EstimationImportSettings" Label="@Localizer["Standard ImportProfil"]" Placeholder="@Localizer["Ej vald"]" Dense="true"
           Variant="Variant.Outlined" Value="DefaultProfile" ValueChanged="OnProfileChanged" Margin="Margin.Dense" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
    @foreach (var item in Profiles)
    {
        <MudSelectItem Value="item"/>
    }
</MudSelect>
*@


@code {
    [Inject] public required IStringLocalizer<DefaultImortSettingsSelector> Localizer { get; set; }
    [Inject] public required IImportSettingsService ImportSettingsService { get; set; }

    List<EstimationImportSettingsDto> Profiles { get; set; } = new List<EstimationImportSettingsDto>();
    EstimationImportSettingsDto? DefaultProfile { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }
    async Task Refresh()
    {
        await SetLoading(true);
        Profiles.Clear();
        Profiles.AddRange(await ImportSettingsService.GetAllAsync());
        DefaultProfile = await ImportSettingsService.GetDefaultAsync();
        await SetLoading(false);
    }
    async Task OnProfileChanged(EstimationImportSettingsDto profile)
    {
        DefaultProfile = profile;
        await ImportSettingsService.SaveAsDefaultAsync(profile);
    }
}
