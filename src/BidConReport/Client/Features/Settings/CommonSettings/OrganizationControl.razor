@using SharedPlatformLibrary.DTOs;
@inherits IsLoadingComponent

<MudSelect T="OrganizationDTO" Label="@Localizer["Organisation"]" Placeholder="@Localizer["Ej vald"]" Dense="true"
           Variant="Variant.Outlined" Value="ActiveOrganization" ValueChanged="OnProfileChanged" Margin="Margin.Dense" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
    @foreach (var item in Organizations)
    {
        <MudSelectItem Value="item"/>
    }
</MudSelect>



@code {
    [Inject] public required IStringLocalizer<DefaultReportTemplateSelector> Localizer { get; set; }
    [Inject] public required IOrganizationService OrganizationService { get; set; }
    [Inject] public required NavigationManager NavigationManager { get; set; }

    List<OrganizationDTO> Organizations { get; set; } = new List<OrganizationDTO>();
    OrganizationDTO? ActiveOrganization { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }
    async Task Refresh()
    {
        await SetLoading(true);
        Organizations.Clear();
        Organizations.AddRange(await OrganizationService.GetAll());
        ActiveOrganization = await OrganizationService.GetCurrent();
        await SetLoading(false);
    }
    async Task OnProfileChanged(OrganizationDTO organization)
    {
        ActiveOrganization = organization;
        await OrganizationService.SetAsActive(organization);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
