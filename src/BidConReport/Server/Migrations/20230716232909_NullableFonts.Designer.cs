// <auto-generated />
using System;
using BidConReport.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BidConReport.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230716232909_NullableFonts")]
    partial class NullableFonts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BidConReport.Server.Shared.Enteties.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDarkMode")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BidConReport.Server.Shared.Enteties.UserOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DefaultEstimationSettingsId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultReportTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultEstimationSettingsId");

                    b.HasIndex("DefaultReportTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOrganizations");
                });

            modelBuilder.Entity("BidConReport.Shared.Entities.Estimation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BidConId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("CostBeforeChanges")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HiddenUnitAndAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuickTags")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<string>("Representative")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SelectionTags")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Estimations");
                });

            modelBuilder.Entity("BidConReport.Shared.Entities.EstimationImportSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CostBeforeChangesAccount")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CostFactorAccount")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HiddenTag")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HiddenUnitTag")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NetCostAccount")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuickTags")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<string>("SelectionTags")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<bool>("UseRevisionAsSelectionTags")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EstimationImportSettings");
                });

            modelBuilder.Entity("BidConReport.Shared.Entities.EstimationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ChangedToRowNumber")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayedQuantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayedUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("EstimationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EstimationItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("UnitCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EstimationId");

                    b.HasIndex("EstimationItemId");

                    b.ToTable("EstimationItem");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.FontProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bold")
                        .HasColumnType("bit");

                    b.Property<string>("FontName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<bool>("Italic")
                        .HasColumnType("bit");

                    b.Property<bool>("Underline")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FontProperties");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Header.HeaderDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FontId")
                        .HasColumnType("int");

                    b.Property<string>("ValueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FontId")
                        .IsUnique();

                    b.ToTable("HeaderDefinition");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Information.InformationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InformationSectionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("ValueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InformationSectionId");

                    b.ToTable("InformationItem");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("LayoutOrder")
                        .HasColumnType("int");

                    b.Property<int>("TitleFontId")
                        .HasColumnType("int");

                    b.Property<int>("ValueFontId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TitleFontId")
                        .IsUnique();

                    b.HasIndex("ValueFontId")
                        .IsUnique();

                    b.ToTable("InformationSection");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Price.PriceSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangesDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CommentFontId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("LayoutOrder")
                        .HasColumnType("int");

                    b.Property<int>("PriceFontId")
                        .HasColumnType("int");

                    b.Property<string>("PriceWithChangesDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PriceWithoutChangesDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowChanges")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CommentFontId")
                        .IsUnique();

                    b.HasIndex("PriceFontId")
                        .IsUnique();

                    b.ToTable("PriceSection");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InformationSectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PriceSectionId")
                        .HasColumnType("int");

                    b.Property<int>("TableSectionId")
                        .HasColumnType("int");

                    b.Property<int>("TitleSectionId")
                        .HasColumnType("int");

                    b.Property<int>("TopLeftHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("TopRightHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InformationSectionId")
                        .IsUnique();

                    b.HasIndex("PriceSectionId")
                        .IsUnique();

                    b.HasIndex("TableSectionId")
                        .IsUnique();

                    b.HasIndex("TitleSectionId")
                        .IsUnique();

                    b.HasIndex("TopLeftHeaderId")
                        .IsUnique();

                    b.HasIndex("TopRightHeaderId")
                        .IsUnique();

                    b.ToTable("ReportTemplates");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Table.ColumnDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CelleFontId")
                        .HasColumnType("int");

                    b.Property<int>("DataSource")
                        .HasColumnType("int");

                    b.Property<int>("GroupFontId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PartFontId")
                        .HasColumnType("int");

                    b.Property<int>("TableSectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CelleFontId")
                        .IsUnique();

                    b.HasIndex("GroupFontId")
                        .IsUnique();

                    b.HasIndex("PartFontId")
                        .IsUnique();

                    b.HasIndex("TableSectionId");

                    b.ToTable("ColumnDefinition");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Table.TableSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("LayoutOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TableSection");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Title.TitleSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FontId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("LayoutOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FontId")
                        .IsUnique();

                    b.ToTable("TitleSection");
                });

            modelBuilder.Entity("BidConReport.Server.Shared.Enteties.UserOrganization", b =>
                {
                    b.HasOne("BidConReport.Shared.Entities.EstimationImportSettings", "DefaultEstimationSettings")
                        .WithMany()
                        .HasForeignKey("DefaultEstimationSettingsId");

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "DefaultReportTemplate")
                        .WithMany()
                        .HasForeignKey("DefaultReportTemplateId");

                    b.HasOne("BidConReport.Server.Shared.Enteties.User", "User")
                        .WithMany("UserOrganizations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultEstimationSettings");

                    b.Navigation("DefaultReportTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BidConReport.Shared.Entities.EstimationItem", b =>
                {
                    b.HasOne("BidConReport.Shared.Entities.Estimation", null)
                        .WithMany("Items")
                        .HasForeignKey("EstimationId");

                    b.HasOne("BidConReport.Shared.Entities.EstimationItem", null)
                        .WithMany("Items")
                        .HasForeignKey("EstimationItemId");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Header.HeaderDefinition", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "Font")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Header.HeaderDefinition", "FontId")
                        .IsRequired();

                    b.Navigation("Font");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Information.InformationItem", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", null)
                        .WithMany("Items")
                        .HasForeignKey("InformationSectionId")
                        .IsRequired();
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "TitleFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", "TitleFontId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "ValueFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", "ValueFontId")
                        .IsRequired();

                    b.Navigation("TitleFont");

                    b.Navigation("ValueFont");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Price.PriceSection", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "CommentFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Price.PriceSection", "CommentFontId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "PriceFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Price.PriceSection", "PriceFontId")
                        .IsRequired();

                    b.Navigation("CommentFont");

                    b.Navigation("PriceFont");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", "InformationSection")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "InformationSectionId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Price.PriceSection", "PriceSection")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "PriceSectionId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Table.TableSection", "TableSection")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "TableSectionId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Title.TitleSection", "TitleSection")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "TitleSectionId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Header.HeaderDefinition", "TopLeftHeader")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "TopLeftHeaderId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Header.HeaderDefinition", "TopRightHeader")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.ReportTemplate", "TopRightHeaderId")
                        .IsRequired();

                    b.Navigation("InformationSection");

                    b.Navigation("PriceSection");

                    b.Navigation("TableSection");

                    b.Navigation("TitleSection");

                    b.Navigation("TopLeftHeader");

                    b.Navigation("TopRightHeader");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Table.ColumnDefinition", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "CellFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Table.ColumnDefinition", "CelleFontId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "GroupFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Table.ColumnDefinition", "GroupFontId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "PartFont")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Table.ColumnDefinition", "PartFontId")
                        .IsRequired();

                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.Table.TableSection", null)
                        .WithMany("Columns")
                        .HasForeignKey("TableSectionId")
                        .IsRequired();

                    b.Navigation("CellFont");

                    b.Navigation("GroupFont");

                    b.Navigation("PartFont");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Title.TitleSection", b =>
                {
                    b.HasOne("BidConReport.Shared.Features.ReportTemplate.FontProperties", "Font")
                        .WithOne()
                        .HasForeignKey("BidConReport.Shared.Features.ReportTemplate.Title.TitleSection", "FontId")
                        .IsRequired();

                    b.Navigation("Font");
                });

            modelBuilder.Entity("BidConReport.Server.Shared.Enteties.User", b =>
                {
                    b.Navigation("UserOrganizations");
                });

            modelBuilder.Entity("BidConReport.Shared.Entities.Estimation", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BidConReport.Shared.Entities.EstimationItem", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Information.InformationSection", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BidConReport.Shared.Features.ReportTemplate.Table.TableSection", b =>
                {
                    b.Navigation("Columns");
                });
#pragma warning restore 612, 618
        }
    }
}
