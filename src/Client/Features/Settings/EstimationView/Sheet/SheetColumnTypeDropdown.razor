@using Client.Shared.Components.DropDown
@using Client.Shared.EstimationViewTemplate.Models;
@using SharedLibrary.Enums.ViewTemplate;


<DropDown Disabled="Column is null" CloseOnContentClick="true" >
    <ActivatorContent>
        <div class="border border-solid" style="display: flex; height: 27px; align-items: center; padding: 4px;">
            <span class="d-flex flex-grow-1">
                @if (Column is not null)
                {
                    @ColumnTypeNamesMap[Column.ColumnType]
                }
            </span>
            <MudIcon Icon="@Icons.Material.Sharp.KeyboardArrowDown" />
        </div>
    </ActivatorContent>
    <DropDownContent>
        
        @if (Column is not null)
        {
            <div class="border border-solid">
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.Description)">@ColumnTypeNamesMap[SheetColumnType.Description]</DropDownItem>
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.Quantity)">@ColumnTypeNamesMap[SheetColumnType.Quantity]</DropDownItem>
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.Unit)">@ColumnTypeNamesMap[SheetColumnType.Unit]</DropDownItem>
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.UnitCost)">@ColumnTypeNamesMap[SheetColumnType.UnitCost]</DropDownItem>
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.TotalCost)">@ColumnTypeNamesMap[SheetColumnType.TotalCost]</DropDownItem>
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.UnitAskingPrice)">@ColumnTypeNamesMap[SheetColumnType.UnitAskingPrice]</DropDownItem>
                <DropDownItem OnClick="() => SetColumnType(SheetColumnType.TotalAskingPrice)">@ColumnTypeNamesMap[SheetColumnType.TotalAskingPrice]</DropDownItem>
            </div>
        }
        
    </DropDownContent>
</DropDown>

@code {
    [Inject] public required IStringLocalizer<SheetColumnTypeDropdown> Localizer { get; set; }

    [Parameter, EditorRequired] public required SheetColumn? Column { get; set; }
    [Parameter] public string Height { get; set; } = "30px";



    Dictionary<SheetColumnType, string> ColumnTypeNamesMap = new();

    protected override void OnInitialized()
    {
        ColumnTypeNamesMap.Add(SheetColumnType.Description, Localizer["Benämning"]);
        ColumnTypeNamesMap.Add(SheetColumnType.Quantity, Localizer["Mängd"]);
        ColumnTypeNamesMap.Add(SheetColumnType.Unit, Localizer["Enhet"]);
        ColumnTypeNamesMap.Add(SheetColumnType.UnitCost, Localizer["Netto/enhet"]);
        ColumnTypeNamesMap.Add(SheetColumnType.TotalCost, Localizer["Netto totalt"]);
        ColumnTypeNamesMap.Add(SheetColumnType.UnitAskingPrice, Localizer["Apris/enhet"]);
        ColumnTypeNamesMap.Add(SheetColumnType.TotalAskingPrice, Localizer["Apris totalt"]);
    }
    void SetColumnType(SheetColumnType type)
    {
        if(Column is not null)
        {
            Column.ColumnType = type;
        }
    }
}
