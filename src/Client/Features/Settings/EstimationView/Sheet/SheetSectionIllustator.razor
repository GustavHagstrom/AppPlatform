@using Client.Shared.EstimationViewTemplate.Models.SectionModels;
@using System.Globalization;

<style>
    .tool-unselected {
        padding: 3px;
        border: 1px;
        border-style: solid;
        border-color: transparent;
    }

    .tool-unselected:hover {
        padding: 3px;
        border: 1px;
        border-style: solid;
        border-color: var(--mud-palette-text-primary);
    }

    .tool-selected {
        padding: 2px;
        border: 2px;
        border-style: solid;
        border-color: var(--mud-palette-primary);
    }

    .tool {
        transition-property: border-color, background-color;
        transition-duration: 200ms;
    }
</style>
<SectionToolbar Active="IsSelected" />
<div class="d-flex" style="min-height: 30px">
    
    @foreach (var column in Section.Columns)
    {
        <div @onclick="() => SelectedColumn = column"
             style="@($"width: {WidthPercent(column)}%")"
             class="@ColumnClass(column)">
            Format
        </div>
    }
</div>


@code {
    [Parameter, EditorRequired] public required SheetSection Section { get; set; }
    [Parameter, EditorRequired] public bool IsSelected { get; set; }

    SheetColumn? SelectedColumn;

    int ColumnWidthSum => Section.Columns.Sum(x => x.WidthPercent);

    string ColumnClass(SheetColumn column) => SelectedColumn == column ? "tool tool-selected" : "tool tool-unselected";

    string WidthPercent(SheetColumn column)
    {
        var widthSum = Section.Columns.Sum(x => x.WidthPercent);
        double percent = (double)column.WidthPercent / (double)widthSum * 100;
        return percent.ToString(CultureInfo.InvariantCulture);
    }
}
