@using Client.Features.Settings.EstimationView.Models;
@using Client.Shared.EstimationViewTemplate.Models.SectionModels;
@using Client.Features.Settings.EstimationView;

<MudPaper Style="height: 40px; background-color: var(--mud-palette-table-lines);" Elevation="0" Class="border-b border-solid d-flex justify-space-around">
    <div class="d-flex align-self-stretch">
        @if (Selection?.Section is DataSection dataSection)
        {
            <p>I am a data section</p>
        }
        else if (Selection?.Section is SheetSection sheetSection)
        {
            @if(Selection.ActiveTool is SheetColumnTool columnTool)
            {
                <p>ColumnTool</p>
                <MudButton Style="min-width: 40px" Disabled="columnTool is null" OnClick="() => DeleteColumnIfConfirmed(columnTool)">
                    <MudIcon Icon="@Icons.Material.Sharp.Delete" Color="Color.Error" />
                </MudButton>
            }
            <MudButton Style="min-width: 40px" OnClick="() => AddColumnToSheetSection(sheetSection)">
                <MudIcon Icon="@Icons.Material.Sharp.Add" Color="Color.Success"/>
            </MudButton>
            
        }
        else
        {
            <p>I am nothing</p>
        }
    </div>

</MudPaper>

@code {
    [Inject] public required IStringLocalizer<SectionSpecificToolbar> Localizer { get; set; }
    [Inject] public required IDialogService DialogService { get; set; }
    [Parameter, EditorRequired] public SectionSelection? Selection { get; set; }
    [Parameter, EditorRequired] public EventCallback StateChangedRequest { get; set; }

    void AddColumnToSheetSection(SheetSection section)
    {
        section.Columns.Add(new SheetColumn { WidthPercent = 10 });
        StateChangedRequest.InvokeAsync();
    }
    async Task DeleteColumnIfConfirmed(SheetColumnTool columnTool)
    {
        var parameters = new DialogParameters<YesNoDialog>();
        parameters.Add(x => x.Info, Localizer["Vill du ta bort columnen?"]);

        var dialog = await DialogService.ShowAsync<YesNoDialog>(Localizer["Ta bort"], parameters);
        var result = await dialog.Result;
        if(!result.Canceled && Selection?.Section is SheetSection sheetSection)
        {
            sheetSection.Columns.Remove(columnTool.Column);
            Selection.ActiveTool = null;
            await StateChangedRequest.InvokeAsync();
        }
    }
}
