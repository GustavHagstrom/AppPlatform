@page "/settings/organization/new"
@inject IStringLocalizer<NewOrganizationPage> Localizer
@inject IOrganizationService OrganizationService
@inject AuthenticationStateProvider AuthProvider
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<SettingsPage Title="@Localizer["Skapa ny organisation"]" >
    <MudTextField T="string" Label="@Localizer["Namn"]" Variant="Variant.Outlined" @bind-Value="Name" Validation="@(new Func<string, string>(ValidateName))" />
    <div class="d-flex">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="Submit">@Localizer["Skapa"]</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" @onclick="@(async () => await JSRuntime.InvokeVoidAsync("history.back"))">@Localizer["Avbryt"]</MudButton>
    </div>
</SettingsPage>
@code {
    string Name { get; set; } = string.Empty;

    string ValidateName(string value)
    {
        if (string.IsNullOrWhiteSpace(value))
        {
            return Localizer["Namn är obligatoriskt"];
        }
        if(value.Length > 50)
        {
            return Localizer["Namn får inte vara längre än 50 tecken"];
        }
        return string.Empty;
    }

    async Task Submit()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        if (state.User.Identity?.IsAuthenticated == true && string.IsNullOrEmpty(ValidateName(Name)))
        {
            var org = new Organization
            {
                Name = Name
            };
            await OrganizationService.CreateAsync(state.User, org);
            NavigationManager.NavigateTo(ApplicationRoutes.Settings.Organization.Index);
        }
    }
}
