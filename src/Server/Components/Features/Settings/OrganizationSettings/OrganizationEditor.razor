@inject IStringLocalizer<OrganizationEditor> Localizer
@inject IOrganizationService OrganizationService
@inject AuthenticationStateProvider AuthProvider
<MudTextField T="string" Value="ActiveOrganizationContainer?.ActiveOrganization?.Name" ValueChanged="OnValueChanged"
              Label="@Localizer["Namn"]"  Margin="Margin.Dense" Variant="Variant.Outlined"/>

@code {
    [CascadingParameter] public ActiveOrganizationContainer? ActiveOrganizationContainer { get; set; }

    string EmptyString = string.Empty;

    async Task OnValueChanged(string value)
    {
        if (ActiveOrganizationContainer?.ActiveOrganization is not null)
        {
            ActiveOrganizationContainer.ActiveOrganization.Name = value;
            var state = await AuthProvider.GetAuthenticationStateAsync();
            await OrganizationService.UpdateAsync(state.User, ActiveOrganizationContainer.ActiveOrganization);
            await ActiveOrganizationContainer.RefreshAsync();
        }
        
    }
}
