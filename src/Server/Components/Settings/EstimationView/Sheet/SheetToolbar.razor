@using Client.Shared.EstimationViewTemplate.Models;


<SectionToolbar IsActive="IsActive">

    <div class="d-flex mx-auto" style="height: 100%;">

        <MudHidden Breakpoint="Breakpoint.Xs">
            <CellFormatEditor Format="SelectedCell?.CellFormat" StateChangeRequest="StateChangeRequest" />
        </MudHidden>

        <MudHidden Breakpoint="Breakpoint.SmAndUp">
            <Client.Shared.Components.DropDown.DropDown CloseOnContentClick="false" ContainerStyle="height: 100%;" DropDownContentStyle="width: auto;">
                <ActivatorContent>
                    <div style="height: 100%; display: flex; flex-direction: column; align-items: center;">
                        <MudIcon Icon="@Icons.Material.Sharp.TextFormat" Size="Size.Large" />
                        <MudText Typo="Typo.caption">
                            @Localizer["Cellformat"]
                        </MudText>
                        <MudSpacer/>
                        <MudIcon Icon="@Icons.Material.Sharp.KeyboardArrowDown" Size="Size.Small" />
                    </div>
                    

                </ActivatorContent>
                <DropDownContent>
                    <div class="border border-solid pa-1">
                        <CellFormatEditor Format="SelectedCell?.CellFormat" StateChangeRequest="StateChangeRequest" />
                    </div>
                </DropDownContent>
            </Client.Shared.Components.DropDown.DropDown>
        </MudHidden>

        
        
        <MudDivider Light="false" Vertical="true" Class="mx-2" />

        <SheetColumnEditor Column="SelectedColumn" ColumnDeleted="ColumnDeleted" Section="Section" StateChangeRequest="StateChangeRequest" />

    </div>
    
</SectionToolbar>

@code {
    [Inject] public required IStringLocalizer<SheetToolbar> Localizer { get; set; }
    [Inject] public required IDialogService DialogService { get; set; }

    [Parameter, EditorRequired] public bool IsActive { get; set; }
    [Parameter, EditorRequired] public SheetColumn? SelectedColumn { get; set; }
    [Parameter, EditorRequired] public SheetCellTemplate? SelectedCell { get; set; }
    [Parameter, EditorRequired] public required SheetSection Section { get; set; }
    [Parameter, EditorRequired] public EventCallback StateChangeRequest { get; set; }
    [Parameter, EditorRequired] public EventCallback ColumnDeleted { get; set; }

}
