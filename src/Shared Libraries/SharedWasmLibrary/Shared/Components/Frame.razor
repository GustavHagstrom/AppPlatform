<div class="@(Border ? $"border border-solid {Class}" : Class)" style="@Style">

    @if(TitleText is not null || TitleContent is not null)
    {
        <div class="d-flex @(UnderlinedTitle && ChildContent is not null ? "border-b border-solid" : string.Empty); @TitleClass" style="@TitleStyle">
            <div class="flex-grow-1 align-center">
                @if (TitleText is not null)
                {
                    <MudText Typo="Typo.h6" Class="py-2 px-4" Style="pr-4 color: var(--mud-palette-text-primary);">@TitleText</MudText>
                }
                @TitleContent
            </div>
        </div>
    }

    <div class="@ChildClass" style="@ChildStyle">
        @ChildContent
    </div>

</div>

@code{
    [Parameter] public string ChildClass { get; set; } = string.Empty;
    [Parameter] public string ChildStyle { get; set; } = string.Empty;

    [Parameter] public string TitleClass { get; set; } = string.Empty;
    [Parameter] public string TitleStyle { get; set; } = string.Empty;

    [Parameter] public string Class { get; set; } = string.Empty;
    [Parameter] public string Style { get; set; } = string.Empty;

    [Parameter] public string? TitleText { get; set; }
    [Parameter] public RenderFragment? TitleContent { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public bool Border { get; set; } = true;
    [Parameter] public bool UnderlinedTitle { get; set; } = true;



    
}